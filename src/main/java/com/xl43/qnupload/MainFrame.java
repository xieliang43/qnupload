/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xl43.qnupload;

import java.io.File;
import javax.swing.JFileChooser;

import com.qiniu.storage.model.DefaultPutRet;
import com.xl43.qnupload.common.FileHandler;
import com.xl43.qnupload.common.FileHandlerResult;
import com.xl43.qnupload.entity.SettingEntity;
import com.xl43.qnupload.upload.Uploader;
import com.xl43.qnupload.upload.UploaderAsynHandler;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author lart_017
 */
public class MainFrame extends javax.swing.JFrame {
    
    private List<String> filePaths = new ArrayList<>();
    private List<String> fileKeys = new ArrayList<>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jOptionPane = new javax.swing.JOptionPane();
        settingDialog = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        accessKeyField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        secretField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        bucketField = new javax.swing.JTextField();
        settingOkBtn = new javax.swing.JButton();
        settingCancelBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        prefixField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        basePathField = new javax.swing.JTextField();
        selectPathBtn = new javax.swing.JButton();
        uploadBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        activePrefixCheckbox = new javax.swing.JCheckBox();
        activeParentPathCheckbox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        settingMenuItem = new javax.swing.JMenuItem();

        jFileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        settingDialog.setTitle("设置");
        settingDialog.setResizable(false);
        settingDialog.setSize(new java.awt.Dimension(483, 250));

        jLabel6.setText("accessKey");

        accessKeyField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel7.setText("secret");

        jLabel8.setText("bucket");

        settingOkBtn.setText("Ok");
        settingOkBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingOkBtnMouseClicked(evt);
            }
        });

        settingCancelBtn.setText("Cancel");
        settingCancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingCancelBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout settingDialogLayout = new javax.swing.GroupLayout(settingDialog.getContentPane());
        settingDialog.getContentPane().setLayout(settingDialogLayout);
        settingDialogLayout.setHorizontalGroup(
            settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingDialogLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(settingDialogLayout.createSequentialGroup()
                        .addComponent(settingCancelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(settingOkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settingDialogLayout.createSequentialGroup()
                        .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accessKeyField)
                            .addComponent(secretField)
                            .addComponent(bucketField, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        settingDialogLayout.setVerticalGroup(
            settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingDialogLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(accessKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(secretField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(bucketField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingOkBtn)
                    .addComponent(settingCancelBtn))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Qnupload");
        setLocationByPlatform(true);
        setName("MainFrame"); // NOI18N
        setSize(new java.awt.Dimension(900, 700));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("prefix");

        prefixField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                prefixFieldInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("base path");

        selectPathBtn.setText("select");
        selectPathBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectPathBtnMouseClicked(evt);
            }
        });

        uploadBtn.setText("upload");
        uploadBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadBtnMouseClicked(evt);
            }
        });

        activePrefixCheckbox.setText("active prefix");
        activePrefixCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activePrefixCheckboxActionPerformed(evt);
            }
        });

        activeParentPathCheckbox.setText("active parent path");
        activeParentPathCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeParentPathCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(basePathField, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(selectPathBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(uploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(prefixField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(activePrefixCheckbox)
                        .addGap(51, 51, 51)
                        .addComponent(activeParentPathCheckbox)))
                .addContainerGap(284, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(prefixField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activePrefixCheckbox)
                    .addComponent(activeParentPathCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(basePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectPathBtn)
                    .addComponent(uploadBtn))
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2);

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "file", "key", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(resultTable);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(2).setResizable(false);
            resultTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1329, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3);

        jMenu1.setText("Setting");

        settingMenuItem.setText("Setting");
        settingMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(settingMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectPathBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectPathBtnMouseClicked
        // TODO add your handling code here:
        int result = jFileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            File file = jFileChooser.getSelectedFile();
            basePathField.setText(file.getAbsolutePath());
            
            FileHandler fileHandler = new FileHandler(basePathField.getText(),new FileHandlerResult(){
                public void fileResult(List<String> paths){
                    filePaths = paths;
                    createKeys();
                    updateTableData();
                }
            });
            
            Thread t = new Thread(fileHandler);
            t.start();
        }
    }//GEN-LAST:event_selectPathBtnMouseClicked

    private void prefixFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_prefixFieldInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_prefixFieldInputMethodTextChanged

    private void uploadBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBtnMouseClicked
        // TODO add your handling code here:
        SettingEntity settingEntity = SettingEntity.getInstance();
        Uploader uploader = new Uploader(settingEntity.getAccessKey(),settingEntity.getSecret(),settingEntity.getBucket());
        uploader.uploadFiles(filePaths, fileKeys,new UploaderAsynHandler(){

			@Override
			public void uploading(String path, String key) {
				// TODO Auto-generated method stub
				synchronized(this){
                                    //更新界面
                                    int row = fileKeys.indexOf(key);
                                    resultTable.setValueAt("uploading", row, 2);
				}
			}

			@Override
			public void uploadSuccess(DefaultPutRet ret) {
				// TODO Auto-generated method stub
				System.out.println(ret.key+" uoload sucess!!!");
				synchronized (this) {
                                    int row = fileKeys.indexOf(ret.key);
                                    resultTable.setValueAt("finish", row, 2);
				}
			}

			@Override
			public void uploadError(String path, String key, String errorMessage) {
				// TODO Auto-generated method stub
				synchronized (this) {
                                    int row = fileKeys.indexOf(key);
                                    resultTable.setValueAt("error", row, 2);
				}
			}
        	
        	
        });
    }//GEN-LAST:event_uploadBtnMouseClicked

    private void settingCancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingCancelBtnMouseClicked
        // TODO add your handling code here:
        settingDialog.setVisible(false);
    }//GEN-LAST:event_settingCancelBtnMouseClicked

    private void settingOkBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingOkBtnMouseClicked
        // TODO add your handling code here:
        //存储设置信息
        SettingEntity settingEntity = SettingEntity.getInstance();
        
        settingEntity.setAccessKey(accessKeyField.getText());
        settingEntity.setSecret(secretField.getText());
        settingEntity.setBucket(bucketField.getText());
        
        settingEntity.writeSetting();
        
        //隐藏对话框
        settingDialog.setVisible(false);
    }//GEN-LAST:event_settingOkBtnMouseClicked

    private void settingMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingMenuItemActionPerformed
        // TODO add your handling code here:
        //获取设置信息
        SettingEntity settingEntity = SettingEntity.getInstance();
        
        accessKeyField.setText(settingEntity.getAccessKey());
        secretField.setText(settingEntity.getSecret());
        bucketField.setText(settingEntity.getBucket());
        
        //显示设置对话框
        settingDialog.setVisible(true);
        settingDialog.setLocationRelativeTo(this);
    }//GEN-LAST:event_settingMenuItemActionPerformed

    private void activeParentPathCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeParentPathCheckboxActionPerformed
        // TODO add your handling code here:
        createKeys();
        updateTableData();
    }//GEN-LAST:event_activeParentPathCheckboxActionPerformed

    private void activePrefixCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activePrefixCheckboxActionPerformed
        // TODO add your handling code here:
        createKeys();
        updateTableData();
    }//GEN-LAST:event_activePrefixCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame mainFrame = new MainFrame();
                mainFrame.setLocationRelativeTo(null);
                mainFrame.setVisible(true);
            }
        });
    }
    
    private void createKeys(){
        
        fileKeys.clear();
        
        String prefix = prefixField.getText();
        if (prefix !=null && prefix.length() > 0 && prefix.endsWith("/")){
            prefix = prefix.substring(0, prefix.length()-2);
        }
        String basePath = basePathField.getText();
        
        for (int i = 0 ; i < filePaths.size() ; i++){
            String path = filePaths.get(i);
            String key = path.replace(basePath, "");
            key = key.replace("\\", "/");
            if (key.startsWith("/")){
                key = key.substring(1);
            }
            
            if (!activeParentPathCheckbox.isSelected()) {
                String[] comStrings = key.split("/");
                key = comStrings[comStrings.length - 1];
            }
            
            if (prefix != null && prefix.length() > 0 && activePrefixCheckbox.isSelected()){
                key = prefix+"/"+key;
            }

            fileKeys.add(key);
        }
    }
    
    private void updateTableData(){
        
        String[][] data = new String[filePaths.size()][3];
        for (int i = 0 ; i < filePaths.size() ; i++){
            String path = filePaths.get(i);
            String key = fileKeys.get(i);
            
            data[i][0] = path;
            data[i][1] = key;
            data[i][2] = "waiting";
        }
        
        String[] header = new String [] {"file", "key", "status"};
        
        resultTable.setModel(new javax.swing.table.DefaultTableModel(data,header) {
            
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accessKeyField;
    private javax.swing.JCheckBox activeParentPathCheckbox;
    private javax.swing.JCheckBox activePrefixCheckbox;
    private javax.swing.JTextField basePathField;
    private javax.swing.JTextField bucketField;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JOptionPane jOptionPane;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField prefixField;
    private javax.swing.JTable resultTable;
    private javax.swing.JTextField secretField;
    private javax.swing.JButton selectPathBtn;
    private javax.swing.JButton settingCancelBtn;
    private javax.swing.JDialog settingDialog;
    private javax.swing.JMenuItem settingMenuItem;
    private javax.swing.JButton settingOkBtn;
    private javax.swing.JButton uploadBtn;
    // End of variables declaration//GEN-END:variables
}
